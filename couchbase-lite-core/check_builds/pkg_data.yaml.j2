{# Map releases to the set of expected platforms. Each entry is a #}
{#     dash separated group, with the platform as the first component #}
{##}
{# !!! If you add an all-new platform here (new first component), be sure to add it to the filebits_for map as well !!! #}
{##}
{%
  set platforms_for = {
    (3, 1, 0):   [ "android-arm64-v8a", "android-armeabi-v7a", "android-x86", "android-x86_64", "ios", "linux", "macosx", "windows-win64-store", "windows-win64", "windows-arm64-store", "windows-arm64"],
    (3, 2, 0):   [ "android-arm64-v8a", "android-armeabi-v7a", "android-x86", "android-x86_64", "ios", "linux", "macosx", "windows-win64", "windows-arm64"]
  }
%}

{##}
{# Pre-defined sets of filename bits, based on the platform's packaging style #}
{##}
{%
  set android_bits = {
    "ext": "zip"
  }
%}
{%
  set linux_bits = {
    "ext": "tar.gz"
  }
%}
{%
  set apple_bits = {
    "ext": "zip"
  }
%}
{%
  set win_bits = {
    "ext": "zip"
  }
%}
{##}
{# Map platforms to defined sets of filename bits #}
{%
  set filebits_for = {
    "android": android_bits,
    "linux": linux_bits,
    "macosx": apple_bits,
    "ios": apple_bits,
    "windows": win_bits
  }
%}
{##}
{##}
{#######  END TEMPLATE CONFIGURATION ##########}
{##}
{####### ACTUAL OUTPUT TEMPLATE ########}
{##}
filenames:
{% set ns = namespace(closest_release=(0, 0, 0))  %}
{% for entry in platforms_for             %}
{%    if version_tuple >= entry                         %}
{%      set ns.closest_release = entry            %}
{%    endif                                       %}
{% endfor                                        %}
{% for platform_entry in platforms_for[ns.closest_release]   %}
{%   set bits = filebits_for[platform_entry.split('-')[0]]           %}
{%    for edition in [ "community", "enterprise" ] %}
  - {{ product }}-{{ edition }}-{{ version }}-{{ build_num }}-{{ platform_entry }}.{{ bits["ext"] }}
{%   endfor %}
{% endfor %}
