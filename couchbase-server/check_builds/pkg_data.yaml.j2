# Map release names to the set of expected platforms. Each entry has the form
#     platform [ : architecture ]
# If :architecture is empty, the filename will use the default arch for the
# platform's packaging style (see below).

# !!! If you add an all-new platform here, be sure to add it to the filebits_for map as well !!!

{%
  set platforms_for = {
    "watson": [ "centos6", "centos7", "debian7", "debian8", "macos", "oel6", "suse11", "ubuntu12.04", "ubuntu14.04", "windows" ],
    "spock": [ "centos6", "centos7", "debian8", "debian9", "macos", "oel6", "oel7", "suse11", "suse12", "ubuntu14.04", "ubuntu16.04", "windows" ],
    "vulcan": [ "centos6", "centos7", "debian8", "debian9", "macos", "oel6", "oel7", "suse11", "suse12", "ubuntu14.04", "ubuntu16.04", "windows" ],
    "alice": [ "amzn2", "centos6", "centos7", "debian8", "debian9", "macos", "oel6", "oel7", "rhel8", "suse11", "suse12", "ubuntu16.04", "ubuntu18.04", "windows" ],
    "mad-hatter": [ "amzn2", "centos7", "centos8", "debian9", "debian10", "macos", "oel7", "oel8", "suse12", "suse15", "ubuntu16.04", "ubuntu18.04", "ubuntu20.04", "windows" ],
    "cheshire-cat": [ "amzn2", "centos7", "debian9", "debian10", "macos", "oel7", "oel8", "rhel8", "suse12", "suse15", "ubuntu18.04", "windows" ],
    "neo": [ "amzn2", "centos7", "debian10", "macos", "oel7", "oel8", "rhel8", "suse12", "suse15", "ubuntu18.04", "ubuntu20.04", "windows", "linux:aarch64" ],
    "elixir": [ "linux", "linux:aarch64", "windows", "macos" ]
  }
%}

# Pre-defined sets of filename bits, based on the platform's packaging style
{%
  set rpm_bits = {
    "default_arch": "x86_64",
    "ext": "rpm",
    "sep1": "-",
    "sep2": "."
  }
%}
{%
  set deb_bits = {
    "default_arch": "amd64",
    "ext": "deb",
    "sep1": "_",
    "sep2": "_"
  }
%}
{%
  set mac_bits = {
    "default_arch": "x86_64-unnotarized",
    "ext": "dmg",
    "sep1": "_",
    "sep2": "_"
  }
%}
{%
  set win_bits = {
    "default_arch": "amd64",
    "ext": "msi",
    "sep1": "_",
    "sep2": "_"
  }
%}

# Map platforms to defined sets of filename bits
{%
  set filebits_for = {
    "amzn2": [ rpm_bits ],
    "centos6": [ rpm_bits ],
    "centos7": [ rpm_bits ],
    "centos8": [ rpm_bits ],
    "debian7": [ deb_bits ],
    "debian8": [ deb_bits ],
    "debian9": [ deb_bits ],
    "debian10": [ deb_bits ],
    "linux": [ deb_bits, rpm_bits ],
    "macos": [ mac_bits ],
    "oel6": [ rpm_bits ],
    "oel7": [ rpm_bits ],
    "oel8": [ rpm_bits ],
    "rhel8": [ rpm_bits ],
    "suse11": [ rpm_bits ],
    "suse12": [ rpm_bits ],
    "suse15": [ rpm_bits ],
    "ubuntu12.04": [ deb_bits ],
    "ubuntu14.04": [ deb_bits ],
    "ubuntu16.04": [ deb_bits ],
    "ubuntu18.04": [ deb_bits ],
    "ubuntu20.04": [ deb_bits ],
    "windows": [ win_bits ]
  }
%}

#######  END TEMPLATE CONFIGURATION ##########

####### ACTUAL OUTPUT TEMPLATE ########

filenames:
{% for platform_entry in platforms_for[release]      %}
{%    set plat_bits = platform_entry.split(':')      %}
{%    set platform = plat_bits[0]                    %}
{%    for bits in filebits_for[platform]             %}
{%      if plat_bits | length > 1                    %}
{%         set arch = plat_bits[1]                   %}
{%      else                                         %}
{%         set arch = bits["default_arch"]           %}
{%      endif                                        %}
{%      for edition in [ "community", "enterprise" ] %}

  - {{ product }}-{{ edition }}{{ bits["sep1"] }}{{ version }}-{{ build_num }}-{{ platform }}{{ bits["sep2"] }}{{ arch }}.{{ bits["ext"] }}

{%      endfor %}
{%    endfor %}
{% endfor %}
